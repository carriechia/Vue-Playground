{"remainingRequest":"/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/node_modules/babel-loader/lib/index.js!/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/src/api/http.js","dependencies":[{"path":"/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/src/api/http.js","mtime":1593963593029},{"path":"/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/.babelrc","mtime":1591966059094},{"path":"/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport axios from 'axios';\nimport router from \"../routes/routes\"; // axios 配置\n\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'http://127.0.0.1:8000/'; // http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  if (localStorage.token) {\n    //判断token是否存在\n    config.headers.Authorization = 'Bearer ' + localStorage.token; //将token设置成请求头\n  }\n\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.errno === 999) {\n    router.replace('/');\n    console.log(\"token过期\");\n  }\n\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["/Users/KAKA/Desktop/NodeJsWorkSpace/vue-light-bootstrap-dashboard/src/api/http.js"],"names":["axios","router","defaults","timeout","baseURL","interceptors","request","use","config","localStorage","token","headers","Authorization","err","Promise","reject","response","data","errno","replace","console","log","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,yB,CAEA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,IAAzB;AACAH,KAAK,CAACE,QAAN,CAAeE,OAAf,GAAyB,wBAAzB,C,CAEA;;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACR,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AAAE;AACxBF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+B,YAAYH,YAAY,CAACC,KAAxD,CADsB,CAC0C;AACjE;;AACD,SAAOF,MAAP;AACD,CANH,EAOE,UAAAK,GAAG,EAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CATH,E,CAYA;;AACAb,KAAK,CAACK,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACE,UAAAS,QAAQ,EAAI;AACV,MAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,KAAwB,GAA5B,EAAiC;AAC/BjB,IAAAA,MAAM,CAACkB,OAAP,CAAe,GAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,SAAOL,QAAP;AACD,CAPH,EAQE,UAAAM,KAAK,EAAI;AACP,SAAOR,OAAO,CAACC,MAAR,CAAeO,KAAf,CAAP;AACD,CAVH;AAYA,eAAetB,KAAf","sourcesContent":["import axios from 'axios';\nimport router from '../routes/routes';\n\n// axios 配置\naxios.defaults.timeout = 8000;\naxios.defaults.baseURL = 'http://127.0.0.1:8000/';\n\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    if (localStorage.token) { //判断token是否存在\n      config.headers.Authorization = 'Bearer ' + localStorage.token;  //将token设置成请求头\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errno === 999) {\n      router.replace('/');\n      console.log(\"token过期\");\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\nexport default axios;"]}]}